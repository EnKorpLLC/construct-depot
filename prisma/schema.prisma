// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String           @id @default(cuid())
  email             String           @unique
  name              String?
  password          String
  role              String           @default("user")
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @updatedAt
  orders            Order[]          @relation("UserOrders")
  suppliedOrders    Order[]          @relation("SupplierOrders")
  poolGroups        PoolGroup[]      @relation("SupplierPools")
  orderSettings     OrderSettings[]
  activityLogs      ActivityLog[]
  sessions          Session[]

  @@index([role, createdAt])
  @@index([email])
}

model Order {
  id                String           @id @default(cuid())
  userId            String
  supplierId        String
  pooledOrderId     String?
  status            String           @default("draft")
  totalAmount       Float
  items             Json
  shippingAddress   Json
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @updatedAt
  user              User             @relation("UserOrders", fields: [userId], references: [id])
  supplier          User             @relation("SupplierOrders", fields: [supplierId], references: [id])
  pooledOrder       PooledOrder?     @relation(fields: [pooledOrderId], references: [id])

  @@index([userId, status])
  @@index([createdAt, status])
  @@index([totalAmount, createdAt])
}

model Session {
  id                String           @id @default(cuid())
  userId            String
  token             String           @unique
  expiresAt         DateTime
  createdAt         DateTime         @default(now())
  user              User             @relation(fields: [userId], references: [id])

  @@index([userId, expiresAt])
  @@index([token])
}

model Product {
  id                String           @id @default(cuid())
  name              String
  description       String?
  price             Float
  stock             Int
  category          String
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @updatedAt
  poolGroups        PoolGroup[]

  @@index([category, createdAt])
  @@index([price, createdAt])
  @@index([stock])
}

model Analytics {
  id                String           @id @default(cuid())
  type              String
  data              Json
  timestamp         DateTime         @default(now())

  @@index([type, timestamp])
  @@index([timestamp])
}

model PoolGroup {
  id                String           @id @default(cuid())
  productId         String
  supplierId        String
  product           Product          @relation(fields: [productId], references: [id])
  supplier          User             @relation("SupplierPools", fields: [supplierId], references: [id])
}

model OrderSettings {
  id                String           @id @default(cuid())
  userId            String
  user              User             @relation(fields: [userId], references: [id])
}

model ActivityLog {
  id                String           @id @default(cuid())
  userId            String
  user              User             @relation(fields: [userId], references: [id])
}

model PooledOrder {
  id                String           @id @default(cuid())
  orders            Order[]
}

model ServiceConfig {
  id            String   @id @default(cuid())
  service       String   @unique // email, analytics, security
  config        Json
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  lastVerified  DateTime?
} 